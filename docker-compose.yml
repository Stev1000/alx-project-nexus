services:
  web:
    build: .
    command: >
      sh -c "sleep 10 &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn ecommerce_backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_data:/app/staticfiles
      - media_data:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
      - redis
    env_file:
      - .env   # Load env vars for Django

  db:
    image: postgres:15
    env_file:
      - .env   # Load env vars for Postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # Broker port
      - "15672:15672"  # Management dashboard
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  redis:
    image: redis:7
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data

  celery_worker:
    build: .
    command: >
      sh -c "sleep 10 &&
             celery -A ecommerce_backend worker -l info"
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - redis
      - db
    env_file:
      - .env

  celery_beat:
    build: .
    command: >
      sh -c "sleep 10 &&
             celery -A ecommerce_backend beat -l info"
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - redis
      - db
    env_file:
      - .env

volumes:
  postgres_data:
  static_data:
  media_data:
  redis_data: